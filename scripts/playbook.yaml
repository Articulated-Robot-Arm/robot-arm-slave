- name: My first play
  hosts: myhosts
  tasks:
   - name: Ping my hosts
     ansible.builtin.ping:

   - name: Print message
     ansible.builtin.debug:
       msg: Hello world

- name: Prepare repo and run Docker container
  hosts: myhosts
  become: yes  # In case you need root for Docker
  vars:
    repo_dir: /opt/robot-arm-slave
    repo_url: https://github.com/Articulated-Robot-Arm/robot-arm-slave
    repo_branch: main

  tasks:

    - name: Ensure the repo directory exists
      ansible.builtin.file:
        path: "{{ repo_dir }}"
        state: directory
        mode: '0755'

    - name: Check if directory is already a git repository
      ansible.builtin.stat:
        path: "{{ repo_dir }}/.git"
      register: git_repo_status

    - name: Clone repo if it doesn't exist
      ansible.builtin.git:
        repo: "{{ repo_url }}"
        dest: "{{ repo_dir }}"
        version: "{{ repo_branch }}"
        update: yes
      when: not git_repo_status.stat.exists

    - name: Pull latest changes if repo already exists
      ansible.builtin.shell: |
        git fetch origin
        git checkout {{ repo_branch }}
        git pull
      args:
        chdir: "{{ repo_dir }}"
      when: git_repo_status.stat.exists

    - name: Check if Docker is installed
      ansible.builtin.command: docker --version
      register: docker_check
      ignore_errors: yes

    - name: Fail if Docker is not installed
      ansible.builtin.fail:
        msg: "Docker is not installed on the target host."
      when: docker_check.rc != 0

    - name: Make sure the run.sh script is executable
      ansible.builtin.file:
        path: /opt/robot-arm-slave/src/run.sh
        mode: '0755'

    - name: Check if container is already running
      ansible.builtin.shell: docker ps --filter "ancestor=carwyn987/robot-arm-slave:arm64v8-1.0.0" --format '{{'{{'}}.ID{{'}}'}}'
      register: running_container
      changed_when: false

    - name: Stop running container if exists
      ansible.builtin.shell: docker stop {{ running_container.stdout }}
      when: running_container.stdout != ""
      ignore_errors: true

    - name: Run the robot arm container script (detached)
      ansible.builtin.shell: nohup ./src/run.sh > /tmp/robot-arm-run.log 2>&1 &
      args:
        chdir: /opt/robot-arm-slave
        executable: /bin/bash
      when: running_container.stdout == ""

    - name: Print recent run log
      ansible.builtin.shell: tail -n 20 /tmp/robot-arm-run.log
      register: run_log
      changed_when: false

    - name: Show container script output
      ansible.builtin.debug:
        var: run_log.stdout

    - name: Wait for container to appear
      ansible.builtin.shell: docker ps --filter "ancestor=carwyn987/robot-arm-slave:arm64v8-1.0.0" --format '{{'{{'}}.ID{{'}}'}}'
      register: container_running
      retries: 5
      delay: 5
      until: container_running.stdout != ""
      changed_when: false